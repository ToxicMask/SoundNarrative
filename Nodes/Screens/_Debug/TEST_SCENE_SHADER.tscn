[gd_scene load_steps=28 format=2]

[ext_resource path="res://Assets/Images/Render/_RenderDropzone/Render.000.png" type="Texture" id=1]
[ext_resource path="res://Assets/Images/WHITE_BLOCK_128x128.png" type="Texture" id=2]
[ext_resource path="res://Resources/Shaders/TelevisionShader.gdshader" type="Shader" id=3]
[ext_resource path="res://Resources/Shaders/DistortionGlass.gdshader" type="Shader" id=4]
[ext_resource path="res://Resources/Shaders/RGBSlider.gdshader" type="Shader" id=5]
[ext_resource path="res://Resources/Shaders/TextureNoiseTransition.gdshader" type="Shader" id=6]
[ext_resource path="res://Resources/Shaders/TextureSlideTransition.gdshader" type="Shader" id=7]
[ext_resource path="res://Nodes/Objects/GameObjects/VisualEffects/FilmGrainOverlay.tscn" type="PackedScene" id=8]
[ext_resource path="res://Assets/Images/Textures/Anomaly0.png" type="Texture" id=9]
[ext_resource path="res://Assets/Images/WHITE_128x128.png" type="Texture" id=10]

[sub_resource type="ShaderMaterial" id=2]
shader = ExtResource( 5 )
shader_param/timeScale = 0.0
shader_param/scaleA = 0.303
shader_param/scaleB = 0.25
shader_param/modulateA = Color( 0.34902, 0.933333, 0.372549, 1 )
shader_param/modulateB = Color( 0.164706, 0.717647, 0.843137, 1 )
shader_param/modulateC = Color( 0.866667, 0.235294, 0.235294, 1 )

[sub_resource type="OpenSimplexNoise" id=5]
octaves = 9
period = 9.7
persistence = 0.98
lacunarity = 0.65

[sub_resource type="NoiseTexture" id=6]
noise = SubResource( 5 )

[sub_resource type="ShaderMaterial" id=4]
shader = ExtResource( 4 )
shader_param/distortionScale = 0.03
shader_param/distortionTexture = SubResource( 6 )

[sub_resource type="OpenSimplexNoise" id=11]
seed = -1
period = 0.1
persistence = 0.0
lacunarity = 0.1

[sub_resource type="NoiseTexture" id=12]
width = 32
height = 32
seamless = true
noise = SubResource( 11 )

[sub_resource type="ShaderMaterial" id=10]
shader = ExtResource( 3 )
shader_param/staticOffset = 0.0
shader_param/grayscaleFactor = true
shader_param/noiseFactor = 0.3
shader_param/noiseBright = 0.0
shader_param/tint = Color( 1, 1, 1, 1 )
shader_param/noiseTexture = SubResource( 12 )

[sub_resource type="ShaderMaterial" id=17]
shader = ExtResource( 7 )
shader_param/interFactor = 0.0

[sub_resource type="Gradient" id=15]
interpolation_mode = 1

[sub_resource type="GradientTexture" id=16]
gradient = SubResource( 15 )
width = 1024

[sub_resource type="ShaderMaterial" id=14]
shader = ExtResource( 6 )
shader_param/interFactor = 0.0

[sub_resource type="Shader" id=18]
code = "shader_type canvas_item;

uniform sampler2D anomalyMask;
uniform sampler2D maskGradient;
uniform sampler2D noiseTexture;


uniform float radiansPerSecond = 0.05;
const float PI = 3.14159;


uniform float waveFactor: hint_range(0.0, 1.0) = 0.0;
uniform float waveOpacity : hint_range(0.0, 1.0) = 0.0;

uniform vec4 tintColor : hint_color = vec4(1);

uniform float rgbOffset : hint_range(0.0, 0.05) = 0;
uniform bool rgbTimeOffset = true;



vec2 rotateUV(vec2 uv, vec2 pivot, float rotation) {
    float cosa = cos(rotation);
    float sina = sin(rotation);
    uv -= pivot;
    return vec2(
        cosa * uv.x - sina * uv.y,
        cosa * uv.y + sina * uv.x 
    ) + pivot;
}

void fragment(){
	
	// Distortion Mask
	vec2 rotatedUV = rotateUV(UV, vec2(0.5), (radiansPerSecond * PI) * TIME );
	vec4 anomalyPixel = texture(anomalyMask, rotatedUV);
	vec2 gradientUV = vec2(anomalyPixel.r, 0);
	vec4 maskPixel = texture(maskGradient, gradientUV);
	
	// Screen Pixel
	vec4 screenPixel = texture(SCREEN_TEXTURE, SCREEN_UV);
	
	// RGB ABERATION
	vec4 rPixel = vec4(1);
	vec4 gPixel = vec4(1);
	vec4 bPixel = vec4(1);
	if (rgbTimeOffset){
		float timeFactor = max(abs(cos(TIME)), .2) ;
		rPixel = texture(SCREEN_TEXTURE, SCREEN_UV+ vec2(-rgbOffset * timeFactor , 0));
		gPixel = texture(SCREEN_TEXTURE, SCREEN_UV);
		bPixel = texture(SCREEN_TEXTURE, SCREEN_UV + vec2(+rgbOffset * timeFactor, 0));
	}else{
		rPixel = texture(SCREEN_TEXTURE, SCREEN_UV+ vec2(-rgbOffset, 0));
		gPixel = texture(SCREEN_TEXTURE, SCREEN_UV);
		bPixel = texture(SCREEN_TEXTURE, SCREEN_UV + vec2(+rgbOffset, 0));
	}
	vec4 rgbPixel = vec4(rPixel.r, gPixel.g, bPixel.b, 1.0);
	
	
	// Wave Distortion
	float noiseFactor = 2.0*(texture(noiseTexture, vec2(UV.x, TIME) ).r) - 1.0;
	vec2 waveOffset = vec2(SCREEN_PIXEL_SIZE.x, 0) * (120.0 * noiseFactor) ;
	vec4 wavePixel = texture(SCREEN_TEXTURE, SCREEN_UV +  waveOffset * waveFactor );
	
	
	
	// Final Mix
	vec4 finalMix = screenPixel;
	finalMix = mix(finalMix, wavePixel, waveOpacity);
	finalMix = mix( finalMix, (rgbPixel) * tintColor, 1.0-maskPixel.r);
	
	COLOR = finalMix;
}"

[sub_resource type="Gradient" id=22]
interpolation_mode = 2

[sub_resource type="GradientTexture" id=23]
gradient = SubResource( 22 )

[sub_resource type="OpenSimplexNoise" id=20]

[sub_resource type="NoiseTexture" id=21]
noise = SubResource( 20 )

[sub_resource type="ShaderMaterial" id=19]
shader = SubResource( 18 )
shader_param/radiansPerSecond = 0.0
shader_param/waveFactor = 0.372
shader_param/waveOpacity = 1.0
shader_param/tintColor = Color( 1, 1, 1, 1 )
shader_param/rgbOffset = 0.006
shader_param/rgbTimeOffset = false
shader_param/anomalyMask = ExtResource( 9 )
shader_param/maskGradient = SubResource( 23 )
shader_param/noiseTexture = SubResource( 21 )

[node name="TEST_SCENE_SHADER" type="Node2D"]
__meta__ = {
"_edit_lock_": true
}

[node name="NoShade" type="Sprite" parent="."]
texture = ExtResource( 1 )
centered = false
__meta__ = {
"_edit_lock_": true
}

[node name="Shade1" type="Sprite" parent="."]
visible = false
material = SubResource( 2 )
texture = ExtResource( 1 )
centered = false

[node name="Shade2" type="Sprite" parent="."]
visible = false
modulate = Color( 0.490196, 0.901961, 0.901961, 1 )
material = SubResource( 4 )
position = Vector2( 161, 330 )
texture = ExtResource( 2 )

[node name="Shade3" type="Sprite" parent="."]
visible = false
material = SubResource( 10 )
texture = ExtResource( 1 )
centered = false

[node name="Shade4" type="Sprite" parent="."]
visible = false
material = SubResource( 17 )
scale = Vector2( 1, 600 )
texture = SubResource( 16 )
centered = false

[node name="Shade5" type="Sprite" parent="."]
visible = false
material = SubResource( 14 )
scale = Vector2( 1, 600 )
texture = SubResource( 16 )
centered = false

[node name="Shade6" type="Sprite" parent="."]
material = SubResource( 19 )
position = Vector2( 777, 48 )
rotation = 1.57079
scale = Vector2( 0.845513, 1.92445 )
texture = ExtResource( 10 )

[node name="ScreenOverlayLayer" type="CanvasLayer" parent="."]
visible = false
follow_viewport_enable = true

[node name="FilmGrainOverlay" parent="ScreenOverlayLayer" instance=ExtResource( 8 )]
